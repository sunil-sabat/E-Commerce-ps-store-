{"version":3,"sources":["constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","constants/productConstants.js","actions/productActions.js","components/Message.js","components/Loader.js","Screens/HomeScreen.js","Screens/ProductScreen.js","Screens/ProductListScreen.js","components/FormContainer.js","Screens/ProductEditScreen.js","constants/cartConstants.js","actions/cartAction.js","Screens/CartScreen.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","Screens/ProfileScreen.js","actions/orderAction.js","components/CheckoutSteps.js","Screens/ShippingScreen.js","Screens/PaymentScreen.js","Screens/PlaceOrderScreen.js","Screens/OrderScreen.js","Screens/UserListScreen.js","Screens/UserEditScreen.js","Screens/OrderListScreen.js","App.js","store.js","reducers/productReducer.js","reducers/cartReducer.js","reducers/userReducer.js","reducers/orderReducer.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_MY_LIST_REQUEST","ORDER_MY_LIST_SUCCESS","ORDER_MY_LIST_FAIL","ORDER_MY_LIST_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_RESET","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","MenuItems","children","url","as","RouterLink","to","mt","base","md","fontSize","letterSpacing","color","textTransform","mr","display","_hover","Header","useDispatch","navigate","useNavigate","useState","show","setShow","useSelector","state","align","justify","wrap","py","px","bgColor","w","top","zIndex","pos","fontWeight","size","textDecor","sm","onClick","HiOutlineMenu","h","width","alignItems","HiShoppingBag","Button","rightIcon","textDecoration","opacity","name","localStorage","removeItem","HiUser","isAdmin","ml","Link","IoChevronDown","Footer","justifyContent","Rating","value","text","IoStar","IoStarHalf","IoStarOutline","Product","product","_id","maxW","borderRadius","overflow","transition","shadow","src","image","alt","minH","objectFit","maxH","direction","mb","rating","numReviews","price","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","listProducts","listProductDetails","Message","status","Loader","thickness","speed","emptyColor","label","HomeScreen","productList","loading","products","error","useEffect","templateColumns","lg","gap","map","ProductScreen","qty","setQty","setRating","comment","setComment","useParams","productDetails","productReviewCreate","successProductReview","success","errorProductReview","alert","console","log","colorScheme","brand","my","description","countInStock","onChange","e","target","Array","keys","i","disabled","reviews","length","p","rounded","review","createdAt","substring","border","borderColor","onSubmit","productId","preventDefault","post","placeholder","ProductListScreen","productDelete","loadingDelete","errorDelete","successDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteHandler","window","confirm","delete","deleteProduct","IoAdd","overflowX","variant","category","IoPencilSharp","IoTrashBinSharp","FormContainer","boxShadow","ProductEditScreen","setName","setPrice","setImage","setBrand","setCategory","setDescription","setCountInStock","setUploading","productUpdate","loadingUpdate","errorUpdate","successUpdate","uploadFileHandler","file","files","formData","FormData","append","put","updateProduct","isRequired","isLoading","CART_ADD_ITEMS","CART_REMOVE_ITEMS","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","useSearchParams","searchParams","removeFromCartHandler","removeFromCart","gridTemplateColumns","textColor","item","borderBottom","height","IoTrashBinOutline","borderWidth","padding","reduce","acc","currVal","LoginScreen","redirect","email","setEmail","password","setPassword","login","pt","RegisterScreen","confirmPassword","setConfirmPassword","setMessage","userRegister","register","required","ProfileScreen","userDetails","user","userUpdateProfile","orderMyList","loadingOrders","errorOrders","orders","updateUserProfile","varient","order","split","totalPrice","isPaid","paidAt","IoWarning","isDelivered","deliveredAt","checkoutSteps","step1","step2","step3","step4","separator","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","CheckoutSteps","PaymentScreen","paymentMethod","paymentMethodRadio","setPaymentMethodRadio","defaultValue","spacing","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","orderCreate","style","idx","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","paypal","marginTop","href","DeliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","userList","users","userDelete","deleteUser","IoCheckmarkCircleSharp","IoCloseCircleSharp","UserEditScreen","userId","setIsAdmin","userUpdate","updateUser","ischecked","checked","OrderListScreen","orderList","App","path","element","reducer","combineReducers","action","existsItem","find","filter","cartItemsFromLocalStorage","getItem","parse","userInfoFromStorage","initialState","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","render","querySelector"],"mappings":"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","file":"static/js/main.0798ff40.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const ORDER_MY_LIST_REQUEST = \"ORDER_MY_LIST_REQUEST\";\r\nexport const ORDER_MY_LIST_SUCCESS = \"ORDER_MY_LIST_SUCCESS\";\r\nexport const ORDER_MY_LIST_FAIL = \"ORDER_MY_LIST_FAIL\";\r\nexport const ORDER_MY_LIST_RESET = \"ORDER_MY_LIST_RESET\";\r\n\r\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\r\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\r\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from \"../constants/userConstants\";\r\nimport { ORDER_MY_LIST_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_MY_LIST_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUser = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/users/\", config);\r\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DELETE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n","import { useState } from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Flex,\r\n  Heading,\r\n  Link,\r\n  Box,\r\n  Icon,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { HiShoppingBag, HiOutlineMenu, HiUser } from \"react-icons/hi\";\r\nimport { IoChevronDown } from \"react-icons/io5\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nconst MenuItems = ({ children, url }) => {\r\n  return (\r\n    <Link\r\n      as={RouterLink}\r\n      to={url}\r\n      mt={{ base: 4, md: 0 }}\r\n      fontSize=\"sm\"\r\n      letterSpacing=\"wide\"\r\n      color=\"whiteAlpha.800\"\r\n      textTransform=\"uppercase\"\r\n      mr=\"5\"\r\n      display=\"block\"\r\n      _hover={{ color: \"whiteAlpha.800\" }}\r\n    >\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [show, setShow] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      as=\"header\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      py=\"6\"\r\n      px=\"6\"\r\n      bgColor=\"green.900\"\r\n      w=\"100%\"\r\n      top=\"0\"\r\n      zIndex=\"2\"\r\n      pos=\"fixed\"\r\n    >\r\n      <Flex align=\"center\" mr=\"5\">\r\n        <Heading\r\n          as=\"h1\"\r\n          color=\"whiteAlpha.800\"\r\n          fontWeight=\"bold\"\r\n          size=\"md\"\r\n          letterSpacing=\"md\"\r\n        >\r\n          <Link\r\n            as={RouterLink}\r\n            to=\"/\"\r\n            _hover={{ color: \"orange.400\", textDecor: \"none\" }}\r\n          >\r\n            PS-Store\r\n          </Link>\r\n        </Heading>\r\n      </Flex>\r\n\r\n      <Box\r\n        display={{ base: \"block\", md: \"none\", sm: \"block\" }}\r\n        onClick={() => setShow(!show)}\r\n      >\r\n        <Icon as={HiOutlineMenu} color=\"white\" w=\"6\" h=\"6\" />\r\n        <title>Menu</title>\r\n      </Box>\r\n\r\n      <Box\r\n        display={{ base: show ? \"block\" : \"none\", md: \"flex\" }}\r\n        width={{ base: \"full\", md: \"auto\" }}\r\n        alignItems=\"center\"\r\n      >\r\n        <MenuItems url=\"/cart\">\r\n          <Flex alignItems=\"center\">\r\n            <Icon as={HiShoppingBag} w=\"4\" h=\"4\" mr=\"1\" />\r\n            Cart\r\n          </Flex>\r\n        </MenuItems>\r\n\r\n        {/* Login/Logout views */}\r\n        {userInfo ? (\r\n          <Menu>\r\n            <MenuButton\r\n              as={Button}\r\n              rightIcon={<IoChevronDown />}\r\n              _hover={{ textDecoration: \"none\", opacity: \"0.7\" }}\r\n            >\r\n              {userInfo.name}\r\n            </MenuButton>\r\n            <MenuList url=\"/login\">\r\n              <MenuItem as={RouterLink} to=\"/profile\">\r\n                Profile\r\n              </MenuItem>\r\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        ) : (\r\n          <MenuItems url=\"/login\">\r\n            <Flex alignItems=\"center\">\r\n              <Icon as={HiUser} w=\"4\" h=\"4\" mr=\"1\" />\r\n              Login\r\n            </Flex>\r\n          </MenuItems>\r\n        )}\r\n\r\n        {/* Admin Menu */}\r\n        {userInfo && userInfo.isAdmin && (\r\n          <Menu>\r\n            <MenuButton\r\n              ml=\"5\"\r\n              color=\"white\"\r\n              fontSize=\"sm\"\r\n              fontWeight=\"semibold\"\r\n              as={Link}\r\n              textTransform=\"uppercase\"\r\n              _hover={{ textDecoration: \"none\", opacity: \"0.7\" }}\r\n            >\r\n              Manage <Icon as={IoChevronDown} />\r\n            </MenuButton>\r\n            <MenuList>\r\n              <MenuItem as={RouterLink} to=\"/admin/userlist\">\r\n                All Users\r\n              </MenuItem>\r\n              <MenuItem as={RouterLink} to=\"/admin/productlist\">\r\n                All Products\r\n              </MenuItem>\r\n              <MenuItem as={RouterLink} to=\"/admin/orderlist\">\r\n                All Orders\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import {Flex, Text} from '@chakra-ui/react'\r\n\r\n\r\n\r\n\r\nconst Footer =()=>{\r\n    return(\r\n        <Flex  \r\n        as = 'footer'\r\n        justifyContent ='center'\r\n        py='6'\r\n        >\r\n            <Text>@Copyright 2021. P-store all rights are reserved.</Text>\r\n        </Flex>\r\n\r\n    )\r\n}\r\n\r\nexport default Footer;","import { Flex, Text, Box, Icon } from \"@chakra-ui/react\";\r\nimport { IoStar, IoStarHalf, IoStarOutline } from \"react-icons/io5\";\r\n\r\nconst Rating = ({ value, text, color = \"orange.800\" }) => {\r\n  return (\r\n    <Flex alignItems=\"flex-start\">\r\n      <Box mr=\"2\">\r\n        <Icon\r\n          color={color}\r\n          as={value >= 1 ? IoStar : value >= 0.5 ? IoStarHalf : IoStarOutline}\r\n        />\r\n        <Icon\r\n          color={color}\r\n          as={value >= 2 ? IoStar : value >= 1.5 ? IoStarHalf : IoStarOutline}\r\n        />\r\n        <Icon\r\n          color={color}\r\n          as={value >= 3 ? IoStar : value >= 2.5 ? IoStarHalf : IoStarOutline}\r\n        />\r\n        <Icon\r\n          color={color}\r\n          as={value >= 4 ? IoStar : value >= 3.5 ? IoStarHalf : IoStarOutline}\r\n        />\r\n        <Icon\r\n          color={color}\r\n          as={value >= 5 ? IoStar : value >= 4.5 ? IoStarHalf : IoStarOutline}\r\n        />\r\n      </Box>\r\n      <Text>{text}</Text>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","import { Link as RouterLink } from \"react-router-dom\";\r\nimport { Flex, Box, Image, Heading, Link, Text } from \"@chakra-ui/react\";\r\nimport Rating from \"./Rating\";\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Link\r\n      as={RouterLink}\r\n      to={`/product/${product._id}`}\r\n      _hover={{ textDecor: \"none\" }}\r\n    >\r\n      <Box\r\n        maxW=\"sm\"\r\n        borderRadius=\"lg\"\r\n        overflow=\"hidden\"\r\n        bgColor=\"whiteAlpha.800\"\r\n        transition=\"all\"\r\n        _hover={{ shadow: \"md\" }}\r\n      >\r\n        <Image\r\n          src={product.image}\r\n          alt={product.name}\r\n          minH=\"400px\"\r\n          objectFit=\"cover\"\r\n          maxH=\"400px\"\r\n          objectFit=\"cover\"\r\n          minW=\"100%\"\r\n        />\r\n        <Flex py=\"5\" px=\"4\" direction=\"column\" justifyContent=\"space-between\">\r\n          <Heading as=\"h4\" fontSize=\"lg\" mb=\"3\">\r\n            {product.name}\r\n          </Heading>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Rating\r\n              value={product.rating}\r\n              text={`${product.numReviews} reviews`}\r\n            />\r\n            <Text fontSize=\"2xl\" fontWeight=\"medium\" color=\"orange.900\">\r\n              ₹{product.price}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </Box>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\r\nexport const PRODUCT_DETAILS_RESET = \"PRODUCT_DETAILS_RESET\";\r\n\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\r\n","import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n} from \"../constants/productConstants\";\r\n\r\nexport function listProducts() {\r\n  return async function (dispatch) {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n      const { data } = await axios.get(\"/api/products\");\r\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          err.response && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport function listProductDetails(id) {\r\n  return async function (dispatch) {\r\n    try {\r\n      dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n      const { data } = await axios.get(`/api/products/${id}`);\r\n      dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PRODUCT_DETAILS_FAIL,\r\n        payload:\r\n          err.response && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload:\r\n          err.response && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n    }\r\n  };\r\n","import { Alert, AlertIcon, AlertTitle } from \"@chakra-ui/react\";\r\n\r\nconst Message = ({ type = \"info\", children }) => {\r\n  return (\r\n    <Alert status={type}>\r\n      <AlertIcon />\r\n      <AlertTitle>{children}</AlertTitle>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { Spinner, Flex } from \"@chakra-ui/react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"center\">\r\n      <Spinner\r\n        thickness=\"4px\"\r\n        speed=\"0.65s\"\r\n        emptyColor=\"gray.200\"\r\n        color=\"gray.900\"\r\n        size=\"xl\"\r\n        label=\"Loading...\"\r\n      />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Heading, Grid } from \"@chakra-ui/react\";\r\nimport Product from \"../components/Product\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n\r\n  const { loading, products, error } = productList;\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Heading as=\"h2\" fontSize=\"3xl\" mb=\"8\" color=\"green.900\">\r\n        Latest Products\r\n      </Heading>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message type=\"error\">{error}</Message>\r\n      ) : (\r\n        <Grid\r\n          templateColumns={{\r\n            lg: \"repeat(4, 1fr)\",\r\n            md: \"1fr 1fr 1fr\",\r\n            sm: \"1fr 1fr\",\r\n            base: \"1fr\",\r\n          }}\r\n          gap=\"8\"\r\n        >\r\n          {products.map((product) => (\r\n            <Product key={product._id} product={product} />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link as RouterLink, useParams, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Flex,\r\n  Grid,\r\n  Image,\r\n  Heading,\r\n  Text,\r\n  Button,\r\n  Divider,\r\n  Select,\r\n  FormControl,\r\n  FormLabel,\r\n  Textarea,\r\n  Box,\r\n  Link,\r\n} from \"@chakra-ui/react\";\r\nimport Rating from \"../components/Rating\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductScreen = () => {\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  let navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, product, error } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const { success: successProductReview, error: errorProductReview } =\r\n    productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert(\"Review submitted\");\r\n      setRating(0);\r\n      setComment(\"\");\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n\r\n    dispatch(listProductDetails(id));\r\n  }, [dispatch, id, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    navigate(`/cart/${id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProductReview(id, { rating, comment }));\r\n  };\r\n  console.log(product);\r\n  return (\r\n    <>\r\n      <Flex mb=\"5\">\r\n        <Button as={RouterLink} to=\"/\" bgColor=\"green.900\" colorScheme=\"white\">\r\n          Go Back\r\n        </Button>\r\n      </Flex>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message type=\"error\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Grid\r\n            templateColumns={{\r\n              lg: \"5fr 4fr 3fr\",\r\n              md: \"1fr 1fr 1fr\",\r\n              sm: \"1fr 1fr \",\r\n              base: \"1fr \",\r\n            }}\r\n            gap=\"10\"\r\n          >\r\n            {/* Column 1 */}\r\n            <Image\r\n              src={product.image}\r\n              alt={product.name}\r\n              borderRadius=\"md\"\r\n              mt=\"4\"\r\n            />\r\n\r\n            {/* Column 2 */}\r\n            <Flex direction=\"column\">\r\n              <Heading as=\"h6\" fontSize=\"base\" color=\"gray.500\">\r\n                {product.brand}\r\n              </Heading>\r\n              <Heading as=\"h2\" fontSize=\"4xl\" mb=\"2\">\r\n                {product.name}\r\n              </Heading>\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} reviews`}\r\n              />\r\n              <Heading\r\n                as=\"h5\"\r\n                my=\"5\"\r\n                fontSize=\"4xl\"\r\n                fontWeight=\"bold\"\r\n                color=\"orange.900\"\r\n              >\r\n                ₹{product.price}\r\n              </Heading>\r\n              <Text>{product.description}</Text>\r\n            </Flex>\r\n\r\n            {/* Column 3 */}\r\n            <Flex direction=\"column\">\r\n              <Flex justifyContent=\"space-between\" py=\"2\">\r\n                <Text>Price:</Text>\r\n                <Text fontWeight=\"bold\">₹{product.price}</Text>\r\n              </Flex>\r\n\r\n              <Flex justifyContent=\"space-between\" py=\"2\">\r\n                <Text>Status:</Text>\r\n                <Text fontWeight=\"bold\">\r\n                  {product.countInStock > 0 ? \"In Stock\" : \"Not Available\"}\r\n                </Text>\r\n              </Flex>\r\n\r\n              <Divider />\r\n\r\n              {product.countInStock > 0 && (\r\n                <Flex justifyContent=\"space-between\" py=\"2\">\r\n                  <Text>Qty:</Text>\r\n                  <Select\r\n                    value={qty}\r\n                    onChange={(e) => setQty(e.target.value)}\r\n                    width=\"30%\"\r\n                  >\r\n                    {[...Array(product.countInStock).keys()].map((i) => (\r\n                      <option key={i + 1} value={i + 1}>\r\n                        {i + 1}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </Flex>\r\n              )}\r\n\r\n              <Button\r\n                textTransform=\"uppercase\"\r\n                letterSpacing=\"wide\"\r\n                colorScheme=\"white\"\r\n                bgColor=\"green.900\"\r\n                my=\"2\"\r\n                _hover={{ color: \"orange.200\" }}\r\n                disabled={product.countInStock === 0}\r\n                onClick={addToCartHandler}\r\n              >\r\n                Add to Cart\r\n              </Button>\r\n            </Flex>\r\n          </Grid>\r\n\r\n          {/* Review form */}\r\n          <Box mt=\"10\">\r\n            <Box>\r\n              <Heading as=\"h2\" size=\"xl\" mb=\"4\">\r\n                Reviews\r\n              </Heading>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n\r\n              <Box p=\"4\" bgColor=\"white\" rounded=\"md\" mb=\"1\">\r\n                {product.reviews.map((review) => (\r\n                  <Flex direction=\"column\" key={review._id} mb=\"5\">\r\n                    <Flex justifyContent=\"space-between\">\r\n                      <Text fontSize=\"lg\">\r\n                        <strong>{review.name}</strong> on {console.log(review)}\r\n                        {console.log(review.createdAt)}\r\n                        {review.createdAt.substring(0, 10)}\r\n                      </Text>\r\n                      <Rating value={review.rating} />\r\n                    </Flex>\r\n                    <Text mt=\"2\">{review.comment}</Text>\r\n                  </Flex>\r\n                ))}\r\n              </Box>\r\n\r\n              {/* FORM */}\r\n              <Box\r\n                p=\"10\"\r\n                bgColor=\"white\"\r\n                rounded=\"md\"\r\n                mt=\"10\"\r\n                border=\"2px\"\r\n                borderColor=\"gray.300\"\r\n              >\r\n                <Heading as=\"h3\" size=\"lg\" mb=\"6\">\r\n                  Write a review\r\n                </Heading>\r\n\r\n                {errorProductReview && (\r\n                  <Message type=\"error\">{errorProductReview}</Message>\r\n                )}\r\n\r\n                {userInfo ? (\r\n                  <form onSubmit={submitHandler}>\r\n                    <FormControl id=\"rating\" mb=\"3\">\r\n                      <FormLabel>Rating</FormLabel>\r\n                      <Select\r\n                        placeholder=\"Select option\"\r\n                        value={rating}\r\n                        onChange={(e) => setRating(e.target.value)}\r\n                      >\r\n                        <option>Select...</option>\r\n                        <option value=\"1\">1 - Poor</option>\r\n                        <option value=\"2\">2 - Okay</option>\r\n                        <option value=\"3\">3 - Good</option>\r\n                        <option value=\"4\">4 - Very Good</option>\r\n                        <option value=\"5\">5 - Execellent</option>\r\n                      </Select>\r\n                    </FormControl>\r\n\r\n                    <FormControl id=\"comment\" mb=\"3\">\r\n                      <FormLabel>Comment</FormLabel>\r\n                      <Textarea\r\n                        value={comment}\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                      ></Textarea>\r\n                    </FormControl>\r\n\r\n                    <Button\r\n                      colorScheme=\"white\"\r\n                      bgColor=\"green.900\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Post Review\r\n                    </Button>\r\n                  </form>\r\n                ) : (\r\n                  <Message>\r\n                    Please{\" \"}\r\n                    <Link as={RouterLink} to=\"/login\">\r\n                      login\r\n                    </Link>{\" \"}\r\n                    to write a review\r\n                  </Message>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import { useEffect } from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  Icon,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport { IoPencilSharp, IoTrashBinSharp, IoAdd } from \"react-icons/io5\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_DETAILS_RESET } from \"../constants/productConstants\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      navigate(`/login`);\r\n    }\r\n\r\n    if (successCreate) {\r\n      navigate(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts());\r\n    }\r\n  }, [\r\n    dispatch,\r\n    navigate,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure ?\")) {\r\n      dispatch(deleteProduct(id));\r\n      dispatch({ type: PRODUCT_DETAILS_RESET });\r\n    }\r\n  };\r\n\r\n  const productCreateHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Flex mb=\"5\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Heading mb=\"5\" fontSize=\"3xl\" as=\"h1\">\r\n          product\r\n        </Heading>\r\n        <Button\r\n          onClick={productCreateHandler}\r\n          bgColor=\"green.900\"\r\n          colorScheme=\"teal\"\r\n        >\r\n          <Icon as={IoAdd} fontSize=\"xl\" fontWeight=\"bold\" mr=\"2\" />\r\n          create product\r\n        </Button>\r\n      </Flex>\r\n\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message type=\"error\">{error}</Message>}\r\n\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message type=\"error\">{error}</Message>}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message type=\"error\">{error}</Message>\r\n      ) : (\r\n        <Box\r\n          w=\"98%\"\r\n          overflowX={{ md: \"scroll\", lg: \"auto\", sm: \"scroll\", base: \"scroll\" }}\r\n          bgColor=\"white\"\r\n          rounded=\"lg\"\r\n          shadow=\"lg\"\r\n          px=\"5\"\r\n          py=\"5\"\r\n        >\r\n          <Table variant=\"striped\" colorScheme=\"green\" size=\"sm\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>ID</Th>\r\n                <Th>NAME</Th>\r\n                <Th>PRICE</Th>\r\n                <Th>CATEGORY</Th>\r\n                <Th>BRAND</Th>\r\n                <Th></Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {products.map((product) => (\r\n                <Tr key={product._id}>\r\n                  <Td>{product._id}</Td>\r\n                  <Td>{product.name}</Td>\r\n                  <Td>{product.price}</Td>\r\n                  <Td>{product.category}</Td>\r\n                  <Td>{product.brand}</Td>\r\n                  <Td>\r\n                    <Flex justifyContent=\"flex-end\" alignItems=\"center\">\r\n                      <Button\r\n                        mr=\"4\"\r\n                        as={RouterLink}\r\n                        to={`/admin/product/${product._id}/edit`}\r\n                        colorScheme=\"orange\"\r\n                      >\r\n                        <Icon as={IoPencilSharp} color=\"white\" size=\"sm\" />\r\n                      </Button>\r\n                      <Button\r\n                        mr=\"4\"\r\n                        colorScheme=\"red\"\r\n                        onClick={() => deleteHandler(product._id)}\r\n                      >\r\n                        <Icon as={IoTrashBinSharp} color=\"white\" size=\"sm\" />\r\n                      </Button>\r\n                    </Flex>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import { Flex, FormLabel } from \"@chakra-ui/react\";\r\n\r\nconst FormContainer = ({ children, width = \"xl\" }) => {\r\n  return (\r\n    <Flex\r\n      direction=\"column\"\r\n      boxShadow=\"md\"\r\n      rounded=\"md\"\r\n      bgColor=\"white\"\r\n      p=\"10\"\r\n      width={width}\r\n    >\r\n      {children}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link as RouterLink, useNavigate, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Spacer,\r\n  Link,\r\n} from \"@chakra-ui/react\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\nimport { productUpdateReducer } from \"../reducers/productReducer\";\r\nimport { PRODUCT_DETAILS_RESET } from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nconst ProductEditScreen = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { id: productId } = useParams();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      navigate(`/admin/productlist`);\r\n      dispatch({ type: PRODUCT_DETAILS_RESET });\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, navigate, productId, product, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/uploads\", formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (err) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        {\" \"}\r\n        <Button\r\n          as={RouterLink}\r\n          to=\"/\"\r\n          bgColor=\"gray.900\"\r\n          colorScheme=\"teal\"\r\n          fontWeight=\"bold\"\r\n          _hover={{ color: \"orange.500\" }}\r\n        >\r\n          Go Back\r\n        </Button>\r\n      </Box>\r\n\r\n      <Flex w=\"full\" alignItems=\"center\" justifyContent=\"center\" py=\"5\">\r\n        <FormContainer>\r\n          <Heading as=\"h1\" mb=\"8\" fontSize=\"3xl\">\r\n            Edit Product\r\n          </Heading>\r\n\r\n          {loadingUpdate && <Loader />}\r\n          {errorUpdate && <Message type=\"error\">{errorUpdate}</Message>}\r\n\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message type=\"error\">{error}</Message>\r\n          ) : (\r\n            <form onSubmit={submitHandler}>\r\n              {/* NAME */}\r\n              <FormControl id=\"name\" isRequired>\r\n                <FormLabel>Name</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </FormControl>\r\n              <Spacer h=\"3\" />\r\n\r\n              {/* PRICE */}\r\n              <FormControl id=\"price\" isRequired>\r\n                <FormLabel>Price</FormLabel>\r\n                <Input\r\n                  type=\"number\"\r\n                  placeholder=\"Enter price\"\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                />\r\n              </FormControl>\r\n              <Spacer h=\"3\" />\r\n\r\n              {/* IMAGE */}\r\n              <FormControl id=\"image\" isRequired>\r\n                <FormLabel>Image</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter image url\"\r\n                  value={image}\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                />\r\n                <Input\r\n                  type=\"file\"\r\n                  id=\"image-file\"\r\n                  onChange={uploadFileHandler}\r\n                />\r\n              </FormControl>\r\n              <Spacer h=\"3\" />\r\n\r\n              {/* DESCRIPTION */}\r\n              <FormControl id=\"description\" isRequired>\r\n                <FormLabel>Description</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter description\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n              </FormControl>\r\n              <Spacer h=\"3\" />\r\n\r\n              {/* BRAND */}\r\n              <FormControl id=\"brand\" isRequired>\r\n                <FormLabel>Brand</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter brand\"\r\n                  value={brand}\r\n                  onChange={(e) => setBrand(e.target.value)}\r\n                />\r\n              </FormControl>\r\n              <Spacer h=\"3\" />\r\n\r\n              {/* CATEGORY */}\r\n              <FormControl id=\"category\" isRequired>\r\n                <FormLabel>Category</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter category\"\r\n                  value={category}\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                />\r\n              </FormControl>\r\n              <Spacer h=\"3\" />\r\n\r\n              {/* COUNT IN STOCK */}\r\n              <FormControl id=\"countInStock\" isRequired>\r\n                <FormLabel>Count In Stock</FormLabel>\r\n                <Input\r\n                  type=\"number\"\r\n                  placeholder=\"Product in stock\"\r\n                  value={countInStock}\r\n                  onChange={(e) => setCountInStock(e.target.value)}\r\n                />\r\n              </FormControl>\r\n              <Spacer h=\"3\" />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                isLoading={loading}\r\n                colorScheme=\"teal\"\r\n                mt=\"4\"\r\n              >\r\n                Update\r\n              </Button>\r\n            </form>\r\n          )}\r\n        </FormContainer>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","export const CART_ADD_ITEMS = \"CART_ADD_ITEMS\";\r\nexport const CART_REMOVE_ITEMS = \"CART_REMOVE_ITEMS\";\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \" CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n","import axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEMS,\r\n  CART_REMOVE_ITEMS,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n  dispatch({\r\n    type: CART_ADD_ITEMS,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      image: data.image,\r\n      qty,\r\n    },\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({ type: CART_REMOVE_ITEMS, payload: id });\r\n\r\n  localStorage.removeItem(\"cartItems\", JSON.stringify(getState().cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data });\r\n\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data });\r\n\r\n  localStorage.setItem(\"savePaymentMethod\", JSON.stringify(data));\r\n};\r\n","import {\r\n  Flex,\r\n  Text,\r\n  Grid,\r\n  Heading,\r\n  Box,\r\n  Image,\r\n  Link,\r\n  Select,\r\n  Button,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  Link as RouterLink,\r\n  useParams,\r\n  useSearchParams,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport { IoTrashBinOutline } from \"react-icons/io5\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst CartScreen = () => {\r\n  let dispatch = useDispatch();\r\n  let navigate = useNavigate();\r\n  let [searchParams] = useSearchParams();\r\n  const { id: productId } = useParams();\r\n  let qty = searchParams.get(\"qty\");\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    navigate(\"/login?redirect=shipping\");\r\n  };\r\n  return (\r\n    <Grid gridTemplateColumns=\"3\">\r\n      <Box>\r\n        <Heading mb=\"8\" textColor=\"green.900\">\r\n          Shopping Cart\r\n        </Heading>\r\n        <Flex>\r\n          {cartItems.length === 0 ? (\r\n            <Message>\r\n              Your cart is Empty.{\" \"}\r\n              <Link as={RouterLink} to=\"/\">\r\n                Go Back\r\n              </Link>\r\n            </Message>\r\n          ) : (\r\n            <Grid\r\n              templateColumns={{\r\n                lg: \"4fr 2fr\",\r\n                md: \"1fr 1fr\",\r\n                sm: \"1fr\",\r\n                base: \"1fr\",\r\n              }}\r\n              gap=\"10\"\r\n              width=\"full\"\r\n            >\r\n              <Flex direction=\"column\">\r\n                {cartItems.map((item) => (\r\n                  <Grid\r\n                    key={item.product}\r\n                    size=\"100%\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"space-between\"\r\n                    borderBottom=\"1px\"\r\n                    borderColor=\"green.900\"\r\n                    py=\"4\"\r\n                    px=\"2\"\r\n                    rounded=\"lg\"\r\n                    templateColumns={{\r\n                      lg: \"1fr 4fr 2fr 2fr 1fr \",\r\n                      md: \"1fr lfr 1fr 1fr 1fr\",\r\n                      sm: \"1fr 1fr 1fr 1fr \",\r\n                      base: \"1fr 1fr\",\r\n                    }}\r\n                  >\r\n                    {/* {product image} */}\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      borderRadius=\"lg\"\r\n                      height=\"14\"\r\n                      objectFit=\"cover\"\r\n                    />\r\n\r\n                    {/* {product name} */}\r\n                    <Text fontWeight=\"semibold\" fontSize=\"lg\">\r\n                      <Link as={RouterLink} to={`/product/${item.product}`}>\r\n                        {item.name}\r\n                      </Link>\r\n                    </Text>\r\n                    {/* {product price} */}\r\n                    <Text fontWeight=\"bold\" fontSize=\"lg\" color=\"orange.900\">\r\n                      ₹{item.price}\r\n                    </Text>\r\n                    {/* {quantity select box} */}\r\n                    <Select\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.product, +e.target.value))\r\n                      }\r\n                      borderColor=\"green.900\"\r\n                      width=\"20\"\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((i) => (\r\n                        <option key={i + 1} value={i + 1}>\r\n                          {i + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                    {/* {delete button} */}\r\n                    <Button\r\n                      type=\"button\"\r\n                      colorScheme=\"red\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                      borderColor=\"green.900\"\r\n                    >\r\n                      <Icon as={IoTrashBinOutline}></Icon>\r\n                    </Button>\r\n                  </Grid>\r\n                ))}\r\n              </Flex>\r\n              <Flex\r\n                direction=\"column\"\r\n                border=\"1px\"\r\n                borderWidth=\"2\"\r\n                borderColor=\"green.900\"\r\n                rounded=\"md\"\r\n                padding=\"5\"\r\n                height=\"48\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Flex direction=\"column\">\r\n                  <Heading as=\"h2\" fontSize=\"2xl\" mb=\"2\" color=\"gray.900\">\r\n                    Subtotal(\r\n                    {cartItems.reduce(\r\n                      (acc, currVal) => acc + (+currVal.qty || 1),\r\n                      0\r\n                    )}\r\n                    )items\r\n                  </Heading>\r\n                  <Text\r\n                    fontWeight=\"bold\"\r\n                    fontSize=\"2xl\"\r\n                    color=\"orange.900\"\r\n                    mb=\"4\"\r\n                  >\r\n                    ₹\r\n                    {cartItems.reduce(\r\n                      (acc, currVal) =>\r\n                        acc + (currVal.qty || 1) * currVal.price,\r\n                      0\r\n                    )}\r\n                  </Text>\r\n                  <Button\r\n                    type=\"button\"\r\n                    disabled={cartItems.length === 0}\r\n                    size=\"lg\"\r\n                    colorScheme=\"orange\"\r\n                    bgColor=\"green.900\"\r\n                    onClick={checkoutHandler}\r\n                  >\r\n                    Proceed To CheckOut\r\n                  </Button>\r\n                </Flex>\r\n              </Flex>\r\n            </Grid>\r\n          )}\r\n        </Flex>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Link as RouterLink,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Link,\r\n  Input,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport Message from \"../components/Message\";\r\nimport { login } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\nimport { CART_ITEMS_RESET } from \"../constants/cartConstants\";\r\n\r\nconst LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  let [searchParams] = useSearchParams();\r\n  let redirect = searchParams.get(\"redirect\") || \"/\";\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(redirect.length > 1 ? `/${redirect}` : `${redirect}`);\r\n    }\r\n  }, [userInfo, navigate, redirect]);\r\n\r\n  const SubmitHandler = (e) => {\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      width=\"full\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      py=\"8\"\r\n      mt=\"4\"\r\n    >\r\n      <FormContainer>\r\n        <Heading as=\"h1\" mb=\"8\" fontSize=\"3xl\">\r\n          LogIn\r\n        </Heading>\r\n        {error && <Message type=\"error\">{error}</Message>}\r\n        <form onSubmit={SubmitHandler}>\r\n          <FormControl id=\"email\">\r\n            <FormLabel>Email Address</FormLabel>\r\n            <Input\r\n              type=\"email\"\r\n              placeholder=\"username@domain.com\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Input>\r\n          </FormControl>{\" \"}\r\n          <Spacer h=\"3\" />\r\n          <FormControl>\r\n            <FormLabel>Password</FormLabel>\r\n            <Input\r\n              type=\"password\"\r\n              placeholder=\"Confidential\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Input>\r\n            <Button\r\n              type=\"submit\"\r\n              isLoading={loading}\r\n              mt=\"4\"\r\n              colorScheme=\"green\"\r\n            >\r\n              Login\r\n            </Button>\r\n          </FormControl>\r\n        </form>\r\n        <Flex pt=\"5\">\r\n          <Text fontWeight=\"semibold\">\r\n            New Customer ?\r\n            <Link\r\n              as={RouterLink}\r\n              to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n            >\r\n              <Spacer h=\"2\" />\r\n              Register\r\n            </Link>\r\n          </Text>\r\n        </Flex>\r\n      </FormContainer>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { register } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {\r\n  Link as RouterLink,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Text,\r\n  Heading,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Link,\r\n  Input,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst RegisterScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  let [searchParams] = useSearchParams();\r\n  let redirect = searchParams.get(\"redirect\") || \"/\";\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(redirect);\r\n    }\r\n  }, [userInfo, navigate, redirect]);\r\n\r\n  const SubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"password do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex width=\"full\" alignItems=\"center\" justifyContent=\"center\" py=\"8\">\r\n      <FormContainer>\r\n        <Heading as=\"h1\" mb=\"8\" fontSize=\"3xl\">\r\n          Register\r\n        </Heading>\r\n\r\n        {error && <Message type=\"error\">{error}</Message>}\r\n        {message && <Message type=\"error\">{message}</Message>}\r\n\r\n        <form onSubmit={SubmitHandler}>\r\n          <FormControl id=\"name\">\r\n            <FormLabel>Name</FormLabel>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Your full name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </FormControl>\r\n          <FormControl id=\"email\">\r\n            <FormLabel>Email Address</FormLabel>\r\n            <Input\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"username@domain.com\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Input>\r\n          </FormControl>{\" \"}\r\n          <Spacer h=\"3\" />\r\n          <FormControl id=\"password\">\r\n            <FormLabel>Password</FormLabel>\r\n            <Input\r\n              required\r\n              type=\"password\"\r\n              placeholder=\"Confidential\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Input>\r\n          </FormControl>\r\n          <Spacer h=\"3\" />\r\n          <FormControl id=\"confirmPassword\">\r\n            <FormLabel>Confirm Password</FormLabel>\r\n            <Input\r\n              required\r\n              type=\"password\"\r\n              placeholder=\"Type password again\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              value={confirmPassword}\r\n            />\r\n          </FormControl>\r\n          <Button type=\"submit\" isLoading={loading} mt=\"4\" colorScheme=\"green\">\r\n            Register\r\n          </Button>\r\n        </form>\r\n\r\n        <Flex pt=\"5\">\r\n          <Text fontWeight=\"semibold\">\r\n            Have an account?\r\n            <Link\r\n              as={RouterLink}\r\n              to={redirect ? `/login?redirect=${redirect}` : \"/login\"}\r\n            >\r\n              Login\r\n            </Link>\r\n          </Text>\r\n        </Flex>\r\n      </FormContainer>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport {\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  Text,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Link,\r\n  Spacer,\r\n  Grid,\r\n  Table,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Icon,\r\n  Thead,\r\n  Tbody,\r\n} from \"@chakra-ui/react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport { IoWarning } from \"react-icons/io5\";\r\nimport { listMyOrders } from \"../actions/orderAction\";\r\n\r\nconst ProfileScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n  console.log(user);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n\r\n  const orderMyList = useSelector((state) => state.orderMyList);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderMyList;\r\n\r\n  console.log(orderMyList);\r\n\r\n  const { success } = userUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [navigate, dispatch, user, userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password do not match\");\r\n    } else {\r\n      /////Dispatch and Update\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n  console.log(orders);\r\n\r\n  return (\r\n    <Grid templateColumns={{ sm: \"1fr\", md: \"1fr 1fr\" }} py=\"5\" gap=\"10\">\r\n      <Flex w=\"full\" alignItems=\"center\" justifyContent=\"center\" py=\"5\" mt=\"5\">\r\n        <FormContainer>\r\n          <Heading as=\"h1\" mb=\"8\" fontSize=\"3xl\">\r\n            User Profile\r\n          </Heading>\r\n\r\n          {error && <Message type=\"error\">{error}</Message>}\r\n          {message && <Message type=\"error\">{message}</Message>}\r\n          {success && <Message type=\"success\">Profile Updated!</Message>}\r\n\r\n          <form onSubmit={submitHandler}>\r\n            <FormControl id=\"name\">\r\n              <FormLabel>Name</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter full name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Spacer h=\"3\" />\r\n            <FormControl id=\"email\">\r\n              <FormLabel>Email address</FormLabel>\r\n              <Input\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Spacer h=\"3\" />\r\n            <FormControl id=\"password\">\r\n              <FormLabel>Password</FormLabel>\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Spacer h=\"3\" />\r\n            <FormControl id=\"confirmPassword\">\r\n              <FormLabel>Confirm Password</FormLabel>\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Enter password again\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              type=\"submit\"\r\n              isLoading={loading}\r\n              mt=\"4\"\r\n              colorScheme=\"orange\"\r\n            >\r\n              Update\r\n            </Button>\r\n          </form>\r\n        </FormContainer>\r\n      </Flex>\r\n      <Flex direction=\"column\" mt=\"16\">\r\n        <Heading as=\"h2\">My Orders</Heading>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message type=\"error\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table varient=\"striped\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>ID</Th>\r\n                <Th>DATE</Th>\r\n                <Th>TOTAL</Th>\r\n                <Th>PAID</Th>\r\n                <Th>DELIVERED</Th>\r\n                <Th></Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {orders.map((order) => (\r\n                <Tr key={order._id}>\r\n                  <Td>{order._id}</Td>\r\n                  <Td>{order.createdAt.split(\"T\")[0]}</Td>\r\n                  <Td>{order.totalPrice}</Td>\r\n                  <Td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <Icon as={IoWarning} color=\"red\" />\r\n                    )}\r\n                  </Td>\r\n                  <Td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <Icon as={IoWarning} color=\"red\" />\r\n                    )}\r\n                  </Td>\r\n                  <Td>\r\n                    <Link as={RouterLink} to={`/order/${order._id}`}>\r\n                      <Button colorScheme=\"orange\" size=\"sm\">\r\n                        Details\r\n                      </Button>\r\n                    </Link>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </Tbody>\r\n          </Table>\r\n        )}\r\n      </Flex>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_MY_LIST_REQUEST,\r\n  ORDER_MY_LIST_SUCCESS,\r\n  ORDER_MY_LIST_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n} from \"../constants/orderConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/orders\", order, config);\r\n\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_PAY_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload:\r\n          err.response && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_MY_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({ type: ORDER_MY_LIST_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ORDER_MY_LIST_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/orders\", config);\r\n\r\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DELIVER_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n","import { Link as RouterLink } from \"react-router-dom\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Flex,\r\n} from \"@chakra-ui/react\";\r\nimport { IoCaretForwardSharp } from \"react-icons/io5\";\r\n\r\nconst checkoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Flex justifyContent=\"center\" mb=\"8\">\r\n      <Breadcrumb separator={<IoCaretForwardSharp color=\"gray.500\" />}>\r\n        {/* Step 1 */}\r\n        <BreadcrumbItem>\r\n          {step1 ? (\r\n            <BreadcrumbLink>Login</BreadcrumbLink>\r\n          ) : (\r\n            <BreadcrumbLink\r\n              disabled\r\n              color=\"gray.400\"\r\n              _hover={{ textDecor: \"none\" }}\r\n            >\r\n              Login\r\n            </BreadcrumbLink>\r\n          )}\r\n        </BreadcrumbItem>\r\n\r\n        {/* Step 2 */}\r\n        <BreadcrumbItem>\r\n          {step2 ? (\r\n            <BreadcrumbLink as={RouterLink} to=\"/shipping\">\r\n              Shipping\r\n            </BreadcrumbLink>\r\n          ) : (\r\n            <BreadcrumbLink\r\n              disabled\r\n              color=\"gray.400\"\r\n              _hover={{ textDecor: \"none\" }}\r\n            >\r\n              Shipping\r\n            </BreadcrumbLink>\r\n          )}\r\n        </BreadcrumbItem>\r\n\r\n        {/* Step 3 */}\r\n        <BreadcrumbItem>\r\n          {step3 ? (\r\n            <BreadcrumbLink as={RouterLink} to=\"/payment\">\r\n              Payment\r\n            </BreadcrumbLink>\r\n          ) : (\r\n            <BreadcrumbLink\r\n              disabled\r\n              color=\"gray.400\"\r\n              _hover={{ textDecor: \"none\" }}\r\n            >\r\n              Payment\r\n            </BreadcrumbLink>\r\n          )}\r\n        </BreadcrumbItem>\r\n\r\n        {/* Step 4 */}\r\n        <BreadcrumbItem>\r\n          {step4 ? (\r\n            <BreadcrumbLink as={RouterLink} to=\"/placeorder\">\r\n              Place Order\r\n            </BreadcrumbLink>\r\n          ) : (\r\n            <BreadcrumbLink\r\n              disabled\r\n              color=\"gray.400\"\r\n              _hover={{ textDecor: \"none\" }}\r\n            >\r\n              Place Order\r\n            </BreadcrumbLink>\r\n          )}\r\n        </BreadcrumbItem>\r\n      </Breadcrumb>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default checkoutSteps;\r\n","import { useState } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveShippingAddress } from \"../actions/cartAction\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport {\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Spacer,\r\n  Input,\r\n  Button,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst ShippingScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n  console.log(cart);\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address || \"\");\r\n\r\n  const [city, setCity] = useState(shippingAddress.city || \"\");\r\n\r\n  const [postalCode, setPostalCode] = useState(\r\n    shippingAddress.postalCode || \"\"\r\n  );\r\n  const [country, setCountry] = useState(shippingAddress.city || \"\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    navigate(\"/payment\");\r\n  };\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"center\" py=\"5\" w=\"full\" mt=\"3\">\r\n      <FormContainer>\r\n        {/*Add checkout steps */}\r\n        <CheckoutSteps step1 step2 />\r\n        <Heading as=\"h1\" fontSize=\"3xl\" mb=\"8\">\r\n          Shipping\r\n        </Heading>\r\n        <form onSubmit={submitHandler}>\r\n          {/* ADDRESS */}\r\n          <FormControl id=\"address\" isRequired>\r\n            <FormLabel>Address</FormLabel>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Enter your addresss\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            ></Input>\r\n          </FormControl>\r\n\r\n          <Spacer h=\"3\" />\r\n          {/* CITY */}\r\n          <FormControl id=\"city\" isRequired>\r\n            <FormLabel>City</FormLabel>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\" Enter City\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            ></Input>\r\n          </FormControl>\r\n\r\n          <Spacer h=\"3\" />\r\n          {/* POSTALCODE */}\r\n          <FormControl id=\"postalCode\" isRequired>\r\n            <FormLabel>PostalCode</FormLabel>\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"Enter Postal Code\"\r\n              value={postalCode}\r\n              onChange={(e) => setPostalCode(e.target.value)}\r\n            ></Input>\r\n          </FormControl>\r\n          <Spacer h=\"3\" />\r\n          {/* COUNTRY */}\r\n          <FormControl id=\"country\" isRequired>\r\n            <FormLabel>Country</FormLabel>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Enter Country\"\r\n              value={country}\r\n              onChange={(e) => setCountry(e.target.value)}\r\n            ></Input>\r\n          </FormControl>\r\n\r\n          <Button type=\"submit\" mt=\"4\" colorScheme=\"green\">\r\n            Continue ...\r\n          </Button>\r\n        </form>\r\n      </FormContainer>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import { useState } from \"react\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  HStack,\r\n  Radio,\r\n  RadioGroup,\r\n  Button,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport { savePaymentMethod } from \"../actions/cartAction\";\r\n\r\nconst PaymentScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress, paymentMethod } = cart;\r\n\r\n  const [paymentMethodRadio, setPaymentMethodRadio] = useState(\r\n    paymentMethod || \"paypal\"\r\n  );\r\n\r\n  if (!shippingAddress) {\r\n    navigate(\"/shipping\");\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log();\r\n    dispatch(savePaymentMethod(paymentMethodRadio));\r\n    navigate(\"/placeOrder\");\r\n  };\r\n\r\n  return (\r\n    <Flex justifyContent=\"center \" mt=\"5\">\r\n      <FormContainer>\r\n        <CheckoutSteps step1 step2 step3 />\r\n        <Heading as=\"h1\" mb=\"8\" fontSize=\"3xl\">\r\n          Payment Method\r\n        </Heading>\r\n        <form onSubmit={submitHandler}>\r\n          <FormControl as=\"fieldset\">\r\n            <FormLabel as=\"legend\">\r\n              <RadioGroup defaultValue={paymentMethodRadio}>\r\n                <HStack spacing=\"24px\">\r\n                  <Radio\r\n                    value=\"paypal\"\r\n                    onChange={(e) => setPaymentMethodRadio(e.target.value)}\r\n                  >\r\n                    payment or credit/debit card\r\n                  </Radio>\r\n                </HStack>\r\n              </RadioGroup>\r\n            </FormLabel>\r\n          </FormControl>\r\n          <Button type=\"submit\" mt=\"4\" colorScheme=\"green\">\r\n            Continue...\r\n          </Button>\r\n        </form>\r\n      </FormContainer>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  Box,\r\n  Grid,\r\n  Text,\r\n  Image,\r\n  Link,\r\n} from \"@chakra-ui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderAction\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst PlaceOrderScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  cart.itemsPrice = cart.cartItems.reduce(\r\n    (acc, currVal) => acc + currVal.price * currVal.qty,\r\n    0\r\n  );\r\n\r\n  cart.shippingPrice = cart.itemsPrice < 1000 ? 1000 : 0;\r\n  cart.taxPrice = (18 * cart.itemsPrice) / 100;\r\n  cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { success, order, error } = orderCreate;\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingPrice: cart.shippingPrice,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(order);\r\n    if (success) {\r\n      navigate(`/orders/${order._id}`);\r\n    }\r\n  }, [success]);\r\n\r\n  return (\r\n    <Flex w=\"full\" py=\"5\" direction=\"column\">\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Grid\r\n        templateColumns={{\r\n          lg: \"3fr 2fr\",\r\n          md: \"1fr 1fr\",\r\n          sm: \"1fr\",\r\n          base: \"1fr\",\r\n        }}\r\n        gap=\"20\"\r\n      >\r\n        <Flex direction=\"column\">\r\n          <Box borderBottom=\"1px\" py=\"6\" borderColor=\"geen.900\">\r\n            <Heading as=\"h2\" fontSize=\"2xl\" fontWeight=\"semibold\" mb=\"3\">\r\n              Shipping\r\n            </Heading>\r\n            <Text>\r\n              <strong>Address:</strong>\r\n              {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\r\n              {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\r\n            </Text>\r\n          </Box>\r\n\r\n          <Box borderBottom=\"1px\" py=\"6\" borderColor=\"green.900\">\r\n            <Heading as=\"h2\" fontSize=\"2xl\" fontWeight=\"semibold\" mb=\"3\">\r\n              Payment Method\r\n            </Heading>\r\n            <Text>\r\n              <strong>Method: </strong>{\" \"}\r\n              <span style={{ textTransform: \"capitalize\" }}>\r\n                {cart.paymentMethod}\r\n              </span>\r\n            </Text>\r\n          </Box>\r\n          <Box borderBottom=\"1px\" py=\"6\" borderColor=\"green.900\">\r\n            <Heading as=\"h2\" fontSize=\"2xl\" fontWeight=\"semibold\" mb=\"3\">\r\n              Order Items\r\n            </Heading>\r\n            <Box>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <Box py=\"2\">\r\n                  {cart.cartItems.map((item, idx) => (\r\n                    <Flex\r\n                      key={idx}\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"space-between\"\r\n                    >\r\n                      <Flex py=\"2\" alignItems=\"center\">\r\n                        <Image\r\n                          src={item.image}\r\n                          alt={item.name}\r\n                          w=\"12\"\r\n                          h=\"12\"\r\n                          objectFit=\"cover\"\r\n                          mr=\"6\"\r\n                        />\r\n                        <Link\r\n                          as={RouterLink}\r\n                          to={`/product/${item.product}`}\r\n                          fontWeight=\"medium\"\r\n                          fontSize=\"xl\"\r\n                        >\r\n                          {item.name}\r\n                        </Link>\r\n                      </Flex>\r\n                      <Text fontSize=\"lg\" fontWeight=\"semibold\">\r\n                        {item.qty || 1} x ₹{item.price} = ₹\r\n                        {(item.qty || 1) * item.price}\r\n                      </Text>\r\n                    </Flex>\r\n                  ))}\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Flex>\r\n        {/* {COLUMN 2} */}\r\n        <Flex\r\n          direction=\"column\"\r\n          bgColor=\"white\"\r\n          justifyContent=\"space-between\"\r\n          py=\"8\"\r\n          px=\"8\"\r\n          shadow=\"md\"\r\n          rounded=\"lg\"\r\n          borderColor=\"green.900\"\r\n        >\r\n          <Box>\r\n            <Heading mb=\"6\" as=\"h2\" fontSize=\"3xl\" fontWeight=\"bold\">\r\n              Order Summery\r\n            </Heading>\r\n            {/* {item price} */}\r\n            <Flex\r\n              borderBottom=\"1px\"\r\n              py=\"2\"\r\n              borderColor=\"green.900\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Text fontSize=\"xl\">Items</Text>\r\n              <Text fontWeight=\"bold\" fontSize=\"xl\">\r\n                ₹{cart.itemsPrice}\r\n              </Text>\r\n            </Flex>\r\n\r\n            {/* {Shipping  price} */}\r\n            <Flex\r\n              borderBottom=\"1px\"\r\n              py=\"2\"\r\n              borderColor=\"green.900\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Text fontSize=\"xl\">Shipping</Text>\r\n              <Text fontWeight=\"bold\" fontSize=\"xl\">\r\n                ₹{cart.shippingPrice}\r\n              </Text>\r\n            </Flex>\r\n\r\n            {/* {Tax price} */}\r\n            <Flex\r\n              borderBottom=\"1px\"\r\n              py=\"2\"\r\n              borderColor=\"green.900\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Text fontSize=\"xl\">Tax</Text>\r\n              <Text fontWeight=\"bold\" fontSize=\"xl\">\r\n                ₹{cart.taxPrice}\r\n              </Text>\r\n            </Flex>\r\n\r\n            {/* {total price} */}\r\n            <Flex py=\"2\" alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Text fontSize=\"xl\">Items</Text>\r\n              <Text fontWeight=\"bold\" fontSize=\"xl\" color=\"orange.900\">\r\n                ₹{cart.totalPrice}\r\n              </Text>\r\n            </Flex>\r\n          </Box>\r\n          {error && <Message type=\"error\">{error}</Message>}\r\n\r\n          <Button\r\n            size=\"lg\"\r\n            textTransform=\"uppercase\"\r\n            colorScheme=\"yellow\"\r\n            type=\"button\"\r\n            disabled={cart.cartItems === 0}\r\n            onClick={placeOrderHandler}\r\n          >\r\n            Place Order\r\n          </Button>\r\n        </Flex>\r\n      </Grid>\r\n    </Flex>\r\n  );\r\n};\r\nexport default PlaceOrderScreen;\r\n","import { Link as RouterLink, useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  Flex,\r\n  Heading,\r\n  Box,\r\n  Grid,\r\n  Text,\r\n  Image,\r\n  Link,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderAction\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\nconst OrderScreen = () => {\r\n  const { id: orderId } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { loading, order, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const {\r\n    loading: loadingDeliver,\r\n    error: errorDeliver,\r\n    success: successDeliver,\r\n  } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    order.itemsPrice = order.orderItems.reduce(\r\n      (acc, currVal) => acc + currVal.price * (currVal.qty || 1),\r\n      0\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    const addPaypalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      console.log(clientId);\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.async = true;\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n        console.log(sdkReady);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPaypalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const orderDeliverHandler = () => dispatch(deliverOrder(order));\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message type=\"error\">{error}</Message>\r\n  ) : (\r\n    <Flex w=\"full\" py=\"2\" direction=\"column\" mt=\"2\">\r\n      <Grid\r\n        templateColumns={{\r\n          lg: \"3fr 2fr\",\r\n          md: \"1fr 1fr\",\r\n          sm: \"1fr\",\r\n          base: \"1fr\",\r\n        }}\r\n        gap=\"20\"\r\n      >\r\n        {/* {column1} */}\r\n        <Flex direction=\"column\" marginTop=\"1\">\r\n          <Box borderBottom=\"1px\" py=\"6\" borderColor=\"geen.900\">\r\n            {/* {shipping} */}\r\n            <Heading as=\"h2\" fontSize=\"2xl\" fontWeight=\"semibold\" mb=\"3\">\r\n              Shipping\r\n            </Heading>\r\n            <Text>\r\n              Name:<strong>{order.user.name}</strong>\r\n            </Text>\r\n            <Text>\r\n              Email:\r\n              <strong>\r\n                <a\r\n                  style={{ textDecoration: \"underline\" }}\r\n                  href={`mailto:${order.user.email}`}\r\n                >\r\n                  {order.user.email}\r\n                </a>\r\n              </strong>\r\n            </Text>\r\n            <Text>\r\n              Address:\r\n              <strong>\r\n                {\" \"}\r\n                {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </strong>\r\n            </Text>\r\n            <Text mt=\"2\">\r\n              {order.isDelivered ? (\r\n                <Message type=\"success\">\r\n                  Delivered On {order.DeliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message type=\"error\">Not Delivered</Message>\r\n              )}\r\n            </Text>\r\n          </Box>\r\n          {/* {Payment Method} */}\r\n          <Box borderBottom=\"1px\" py=\"6\" borderColor=\"green.900\">\r\n            <Heading as=\"h2\" fontSize=\"2xl\" fontWeight=\"semibold\" mb=\"3\">\r\n              Payment Method\r\n            </Heading>\r\n            <Text>\r\n              <strong>Method: </strong>{\" \"}\r\n              <span style={{ textTransform: \"capitalize\" }}>\r\n                {order.paymentMethod}\r\n              </span>\r\n            </Text>\r\n          </Box>\r\n          {/* {Order items} */}\r\n          <Box borderBottom=\"1px\" py=\"6\" borderColor=\"gray.300\">\r\n            <Heading as=\"h2\" fontSize=\"2xl\" fontWeight=\"semibold\" mb=\"3\">\r\n              Order Items\r\n            </Heading>\r\n            <Box>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <Box py=\"2\">\r\n                  {order.orderItems.map((item, idx) => (\r\n                    <Flex\r\n                      key={idx}\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"space-between\"\r\n                    >\r\n                      <Flex py=\"2\" alignItems=\"center\">\r\n                        <Image\r\n                          src={item.image}\r\n                          alt={item.name}\r\n                          w=\"12\"\r\n                          h=\"12\"\r\n                          objectFit=\"cover\"\r\n                          mr=\"6\"\r\n                        />\r\n                        <Link\r\n                          as={RouterLink}\r\n                          to={`/product/${item.product}`}\r\n                          fontWeight=\"medium\"\r\n                          fontSize=\"xl\"\r\n                        >\r\n                          {item.name}\r\n                        </Link>\r\n                      </Flex>\r\n                      <Text fontSize=\"lg\" fontWeight=\"semibold\">\r\n                        {item.qty || 1} x ₹{item.price} = ₹\r\n                        {(item.qty || 1) * item.price}\r\n                      </Text>\r\n                    </Flex>\r\n                  ))}\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Flex>\r\n        {/* {column 2} */}\r\n        <Flex\r\n          direction=\"column\"\r\n          bgColor=\"white\"\r\n          justifyContent=\"space-between\"\r\n          py=\"8\"\r\n          px=\"8\"\r\n          shadow=\"md\"\r\n          rounded=\"lg\"\r\n          borderColor=\"green.900\"\r\n        >\r\n          <Box>\r\n            <Heading mb=\"6\" as=\"h2\" fontSize=\"3xl\" fontWeight=\"bold\">\r\n              Order Summery\r\n            </Heading>\r\n            {/* {item price} */}\r\n            <Flex\r\n              borderBottom=\"1px\"\r\n              py=\"2\"\r\n              borderColor=\"green.900\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Text fontSize=\"xl\">Items</Text>\r\n              <Text fontWeight=\"bold\" fontSize=\"xl\">\r\n                ₹{order.itemsPrice}\r\n              </Text>\r\n            </Flex>\r\n\r\n            {/* {Shipping  price} */}\r\n            <Flex\r\n              borderBottom=\"1px\"\r\n              py=\"2\"\r\n              borderColor=\"green.900\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Text fontSize=\"xl\">Shipping</Text>\r\n              <Text fontWeight=\"bold\" fontSize=\"xl\">\r\n                ₹{order.shippingPrice}\r\n              </Text>\r\n            </Flex>\r\n\r\n            {/* {Tax price} */}\r\n            <Flex\r\n              borderBottom=\"1px\"\r\n              py=\"2\"\r\n              borderColor=\"green.900\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Text fontSize=\"xl\">Tax</Text>\r\n              <Text fontWeight=\"bold\" fontSize=\"xl\">\r\n                ₹{order.taxPrice}\r\n              </Text>\r\n            </Flex>\r\n\r\n            {/* {total price} */}\r\n            <Flex py=\"2\" alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Text fontSize=\"xl\">Items</Text>\r\n              <Text fontWeight=\"bold\" fontSize=\"xl\" color=\"orange.900\">\r\n                ₹{order.totalPrice}\r\n              </Text>\r\n            </Flex>\r\n          </Box>\r\n          {!order.isPaid && (\r\n            <Box>\r\n              {loadingPay && <Loader />}\r\n              {!sdkReady ? (\r\n                <Loader />\r\n              ) : (\r\n                <PayPalButton\r\n                  amount={order.totalPrice}\r\n                  onSuccess={successPaymentHandler}\r\n                />\r\n              )}\r\n            </Box>\r\n          )}\r\n\r\n          {loadingDeliver && <Loader />}\r\n          {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n            <Button\r\n              type=\"button\"\r\n              bgColor=\"green.900\"\r\n              colorScheme=\"white\"\r\n              onClick={orderDeliverHandler}\r\n            >\r\n              Mark As Delivered\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </Grid>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listUser, deleteUser } from \"../actions/userActions\";\r\nimport { Link as RouterLink, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  IoCheckmarkCircleSharp,\r\n  IoPencilSharp,\r\n  IoCloseCircleSharp,\r\n  IoTrashBinSharp,\r\n} from \"react-icons/io5\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Table,\r\n  Tbody,\r\n  Thead,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Button,\r\n  Icon,\r\n  Flex,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst UserListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, users, error } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUser());\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [dispatch, userInfo, successDelete]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are You Sure ?\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Heading as=\"h1\" mb=\"2\" fontSize=\"3xl\" mt=\"3\">\r\n        Users\r\n      </Heading>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message type=\"error\">{error}</Message>\r\n      ) : (\r\n        <Box\r\n          overflow={{ lg: \"auto\", md: \"scroll\", sm: \"scroll\", base: \"scroll\" }}\r\n          bgColor=\"white\"\r\n          rounded=\"lg\"\r\n          px=\"5\"\r\n          py=\"5\"\r\n          mt=\"5\"\r\n        >\r\n          <Table variant=\"striped\" colorScheme=\"green\" size=\"sm\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>ID</Th>\r\n                <Th>NAME</Th>\r\n                <Th>EMAIL</Th>\r\n                <Th>ADMIN</Th>\r\n                <Th></Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {users.map((user) => (\r\n                <Tr key={user._id}>\r\n                  <Td>{user._id}</Td>\r\n                  <Td>{user.name}</Td>\r\n                  <Td>\r\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                  </Td>\r\n                  <Td>\r\n                    {user.isAdmin ? (\r\n                      <Icon\r\n                        as={IoCheckmarkCircleSharp}\r\n                        color=\"green.600\"\r\n                        w=\"8\"\r\n                        h=\"8\"\r\n                      />\r\n                    ) : (\r\n                      <Icon\r\n                        as={IoCloseCircleSharp}\r\n                        color=\"red.600\"\r\n                        w=\"8\"\r\n                        h=\"8\"\r\n                      />\r\n                    )}\r\n                  </Td>\r\n                  <Td>\r\n                    <Flex justifyContent=\"flex-end\" alignItems=\"center\">\r\n                      <Button\r\n                        mr=\"4\"\r\n                        as={RouterLink}\r\n                        to={`/admin/user/${user._id}/edit`}\r\n                        colorScheme=\"orange\"\r\n                      >\r\n                        <Icon as={IoPencilSharp} color=\"white\" size=\"sm\" />\r\n                      </Button>\r\n                      <Button\r\n                        mr=\"4\"\r\n                        colorScheme=\"red\"\r\n                        onClick={() => deleteHandler(user._id)}\r\n                      >\r\n                        <Icon as={IoTrashBinSharp} color=\"white\" size=\"sm\" />\r\n                      </Button>\r\n                    </Flex>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link as RouterLink, useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Spacer,\r\n  Link,\r\n  Checkbox,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { id: userId } = useParams();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      navigate(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n        dispatch({ type: USER_UPDATE_RESET });\r\n      }\r\n    }\r\n  }, [user, dispatch, userId, successUpdate, navigate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Button\r\n          as={RouterLink}\r\n          to=\"/admin/userlist\"\r\n          bgColor=\"green.900\"\r\n          colorScheme=\"teal\"\r\n          fontWeight=\"bold\"\r\n          _hover={{ color: \"orange.500\" }}\r\n        >\r\n          Go Back\r\n        </Button>\r\n      </Box>\r\n\r\n      <Flex w=\"full\" alignItems=\"center\" justifyContent=\"center\" py=\"5\">\r\n        <FormContainer>\r\n          <Heading as=\"h1\" mb=\"8\" fontSize=\"3xl\">\r\n            Edit User\r\n          </Heading>\r\n\r\n          {loadingUpdate && <Loader />}\r\n          {errorUpdate && <Message type=\"error\">{errorUpdate}</Message>}\r\n\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message type=\"error\">{error}</Message>\r\n          ) : (\r\n            <form onSubmit={submitHandler}>\r\n              <FormControl id=\"name\" isRequired>\r\n                <FormLabel>Name</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter full name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </FormControl>\r\n              <Spacer h=\"3\" />\r\n\r\n              <FormControl id=\"email\" isRequired>\r\n                <FormLabel>Email Address</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter email address\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </FormControl>\r\n              <Spacer h=\"3\" />\r\n\r\n              <FormControl id=\"isAdmin\" isRequired>\r\n                <FormLabel>Is Admin?</FormLabel>\r\n                <Checkbox\r\n                  size=\"lg\"\r\n                  colorScheme=\"teal\"\r\n                  ischecked={isAdmin}\r\n                  onChange={(e) => setIsAdmin(e.target.checked)}\r\n                >\r\n                  Is Admin?\r\n                </Checkbox>\r\n              </FormControl>\r\n              <Spacer h=\"3\" />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                isLoading={loading}\r\n                colorScheme=\"teal\"\r\n                mt=\"4\"\r\n              >\r\n                Update\r\n              </Button>\r\n            </form>\r\n          )}\r\n        </FormContainer>\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import { useNavigate, Link as RouterLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listOrders } from \"../actions/orderAction\";\r\nimport {\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  Icon,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport { IoCloseCircleSharp } from \"react-icons/io5\";\r\n\r\nconst OrderListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [dispatch, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <Heading as=\"h1\" mb=\"5\" fontSize=\"3xl\">\r\n        Orders\r\n      </Heading>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message type=\"error\">{error}</Message>\r\n      ) : (\r\n        <Box\r\n          bgColor=\"white\"\r\n          py=\"5\"\r\n          px=\"5\"\r\n          rounded=\"lg\"\r\n          shadow=\"lg\"\r\n          overflow={{ lg: \"auto\", md: \"scroll\", sm: \"scroll\", base: \"scroll\" }}\r\n        >\r\n          <Table size=\"sm\" variant=\"striped\" colorScheme=\"green\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>ID</Th>\r\n                <Th>USER</Th>\r\n                <Th>DATE</Th>\r\n                <Th>TOTAL PRICE</Th>\r\n                <Th>PAID</Th>\r\n                <Th>DELIVERED</Th>\r\n                <Th></Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {orders.map((order) => (\r\n                <Tr key={order._id}>\r\n                  <Td>{order._id}</Td>\r\n                  <Td>{order.user && order.user.name}</Td>\r\n                  <Td>{order.createdAt.substring(0, 10)}</Td>\r\n                  <Td>₹{order.totalPrice}</Td>\r\n                  <Td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <Icon\r\n                        as={IoCloseCircleSharp}\r\n                        w=\"8\"\r\n                        h=\"8\"\r\n                        color=\"red.600\"\r\n                      />\r\n                    )}\r\n                  </Td>\r\n                  <Td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <Icon\r\n                        as={IoCloseCircleSharp}\r\n                        w=\"8\"\r\n                        h=\"8\"\r\n                        color=\"red.600\"\r\n                      />\r\n                    )}\r\n                  </Td>\r\n                  <Td>\r\n                    <Flex justifyContent=\"flex-end\" alignItems=\"center\">\r\n                      <Button\r\n                        mr=\"4\"\r\n                        as={RouterLink}\r\n                        to={`/orders/${order._id}`}\r\n                        color=\"teal\"\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                    </Flex>\r\n                  </Td>\r\n                </Tr>\r\n              ))}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import { Flex } from \"@chakra-ui/react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport HomeScreen from \"./Screens/HomeScreen\";\r\nimport ProductScreen from \"./Screens/ProductScreen\";\r\nimport ProductListScreen from \"./Screens/ProductListScreen\";\r\nimport ProductEditScreen from \"./Screens/ProductEditScreen\";\r\nimport CartScreen from \"./Screens/CartScreen\";\r\nimport LoginScreen from \"./Screens/LoginScreen\";\r\nimport RegisterScreen from \"./Screens/RegisterScreen\";\r\nimport ProfileScreen from \"./Screens/ProfileScreen\";\r\nimport ShippingScreen from \"./Screens/ShippingScreen\";\r\nimport PaymentScreen from \"./Screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./Screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./Screens/OrderScreen\";\r\nimport UserListScreen from \"./Screens/UserListScreen\";\r\nimport UserEditScreen from \"./Screens/UserEditScreen\";\r\nimport OrderListScreen from \"./Screens/OrderListScreen\";\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <Flex\r\n        as=\"main\"\r\n        py=\"2\"\r\n        px=\"2\"\r\n        bgColor=\"green.400\"\r\n        mt=\"72px\"\r\n        minH=\"xl\"\r\n        direction=\"column\"\r\n        padding=\"6\"\r\n      >\r\n        <Routes>\r\n          <Route path=\"/\" element={<HomeScreen />} />\r\n          <Route path=\"/product/:id\" element={<ProductScreen />} />\r\n          <Route path=\"/cart/:id\" element={<CartScreen />} />\r\n          <Route path=\"/cart\" element={<CartScreen />} />\r\n          <Route path=\"/login\" element={<LoginScreen />} />\r\n          <Route path=\"/register\" element={<RegisterScreen />} />\r\n          <Route path=\"/profile\" element={<ProfileScreen />} />\r\n          <Route path=\"/shipping\" element={<ShippingScreen />} />\r\n          <Route path=\"/payment\" element={<PaymentScreen />} />\r\n          <Route path=\"/placeorder\" element={<PlaceOrderScreen />} />\r\n          <Route path=\"/orders/:id\" element={<OrderScreen />} />\r\n          <Route path=\"/admin/userlist\" element={<UserListScreen />} />\r\n          <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />} />\r\n          <Route path=\"/admin/productlist\" element={<ProductListScreen />} />\r\n          <Route\r\n            path=\"/admin/product/:id/edit\"\r\n            element={<ProductEditScreen />}\r\n          />\r\n          <Route path=\"/admin/orderlist\" element={<OrderListScreen />} />\r\n        </Routes>\r\n      </Flex>\r\n      <Footer />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n} from \"./reducers/productReducer\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducer\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderMyListReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/orderReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderMyList: orderMyListReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n});\r\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromLocalStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middlewares = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_RESET,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n} from \"../constants/productConstants\";\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_DETAILS_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ADD_ITEMS,\r\n  CART_REMOVE_ITEMS,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEMS:\r\n      const item = action.payload;\r\n\r\n      const existsItem = state.cartItems.find(\r\n        (i) => i.product === item.product\r\n      );\r\n      if (existsItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((i) =>\r\n            i.product === existsItem.product ? item : i\r\n          ),\r\n        };\r\n      } else {\r\n        return { ...state, cartItems: [...state.cartItems, item] };\r\n      }\r\n\r\n    case CART_REMOVE_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((i) => i.product !== action.payload),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, user: action.payload, success: true };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: true, error: action.payload };\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, user: action.payload };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_MY_LIST_REQUEST,\r\n  ORDER_MY_LIST_SUCCESS,\r\n  ORDER_MY_LIST_FAIL,\r\n  ORDER_MY_LIST_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return { loading: false, success: true, order: action.payload };\r\n    case ORDER_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return { loading: false, order: action.payload };\r\n    case ORDER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ORDER_PAY_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ORDER_PAY_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderMyListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_MY_LIST_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_MY_LIST_SUCCESS:\r\n      return { loading: false, orders: action.payload };\r\n    case ORDER_MY_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_MY_LIST_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_LIST_SUCCESS:\r\n      return { loading: false, orders: action.payload };\r\n    case ORDER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ORDER_DELIVER_REQUEST:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <ChakraProvider>\r\n      <App />\r\n    </ChakraProvider>\r\n  </Provider>,\r\n\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}